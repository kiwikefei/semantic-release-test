name: Release
on:
  push:
    branches:
      - release/uat
      - main
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_REGION: ap-southeast-2
jobs:
  release-build:
    name: Setup environment vars
    outputs:
      version: ${{ steps.tag.outputs.version }}
      aws_access_key_id_name: ${{ steps.aws_creds.outputs.aws_access_key_id_name }}
      aws_secret_access_key_name: ${{ steps.aws_creds.outputs.aws_secret_access_key_name }}
      build_admin: ${{ steps.build_flags.outputs.build_admin }}
      build_infra: ${{ steps.build_flags.outputs.build_infra }}
      docker_image: ${{ steps.build_admin.outputs.docker_image }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect Aws creds key names
        id: aws_creds
        run: |
          branch=$(echo "${{ github.ref }}" | sed 's/refs\/heads\///')
          if [[ $branch == 'main' ]]; then
            prefix='PROD'
          elif [[ $branch == 'release/uat' ]]; then
            prefix='UAT'
          else
            echo "Wrong github branch used"
            exit 1
          fi
          echo aws_access_key_id_name=$prefix"_AWS_ACCESS_KEY_ID" >> $GITHUB_OUTPUT
          echo aws_secret_access_key_name=$prefix"_AWS_SECRET_ACCESS_KEY" >> $GITHUB_OUTPUT
          echo release_branch=$branch >> $GITHUB_OUTPUT
          echo "Github ref: ${{ github.ref }}"
          echo "Pushed branch: $branch"
      - name: Tag semantic release
        id: tag
        uses: pixelfusion/actions/tag@master
      - name: Setup build flags by detecting file changes
        id: build_flags
        run: |
          release_branch=${{ steps.aws_creds.outputs.release_branch}}
          git fetch origin $release_branch:refs/remotes/origin/$release_branch
          ADMIN_DIFF=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- ./admin)
          build_admin=false
          build_infra=false
          if [ -n "$ADMIN_DIFF" ]; then
            build_admin=true
            echo "build_admin=" >> $GITHUB_OUTPUT
          fi
          INFRA_DIFF=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- ./infra)
          if [ -n "$INFRA_DIFF" ]; then
            build_admin=true
            build_infra=true
          fi
          echo "build_infra=$build_infra" >> $GITHUB_OUTPUT
          echo "build_admin=$build_admin" >> $GITHUB_OUTPUT
      - name: Build Infra
        if: ${{ steps.build_flags.outputs.build_infra == 'true' }}
        run: |
          echo "build infra"
      - name: Register nova authentication
        if: ${{ steps.build_flags.outputs.build_admin == 'true' }}
        run: |
          echo 'register nova admin'
      - name: Build Admin
        id: build_admin
        if: ${{ steps.build_flags.outputs.build_admin == 'true' }}
        run: |
          echo "build admin"
          echo"docker_image=foobar" >> GITHUB_OUTPUT
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: release-build
    steps:
      - name: Test Echo
        run: |
          echo "Checking deploy envs"
          echo ${{needs.release-build.outputs.aws_access_key_id_name}}
          echo ${{needs.release-build.outputs.aws_secret_access_key_name}}
          echo ${{needs.release-build.outputs.build_admin}}
          echo ${{needs.release-build.outputs.build_infra}}
          echo ${{needs.release-build.outputs.version}}
          echo ${{needs.release-build.outputs.docker_image}}


